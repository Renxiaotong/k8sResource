#This is the resource file to realize the dynamic and static separation of nginx and PHP

#Nginx and PHP share available program segments through NFS

#Load balancing built through service

#Publish to EIP using ingress


#pv
---
kind: PersistentVolume
apiVersion: v1
metadata:
       name: pv-nfs
spec:
       volumeMode: Filesystem
       capacity:
                storage: 30Gi
       accessModes:
       - ReadOnlyMany
       - ReadWriteMany
       - ReadWriteOnce
       persistentVolumeReclaimPolicy: Retain
       nfs:
                server: 192.168.1.100
                path: /var/webhtml

#pvc
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-nfs
spec:
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 25Gi

#php-deployment
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: php-deployment
spec:
  selector:
    matchLabels:
      app: php
  replicas: 1
  template:
    metadata:
      labels:
        app: php
    spec:
      volumes:
      - name: pvc-for-php
        persistentVolumeClaim:
          claimName: pvc-nfs
      - name: conf-for-php
        configMap:
          name: php-conf
      containers:
      - name: php-container
        image: 192.168.1.100:5000/myos:php-fpm
        volumeMounts:
        - name: conf-for-php
          subPath: www.conf
          mountPath: /etc/php-fpm.d/www.conf
        - name: pvc-for-php
          mountPath: /usr/local/nginx/html
        stdin: false
        tty: false
        ports:
        - containerPort: 9000
          protocol: TCP
      restartPolicy: Always
#php-service
---
kind: Service
apiVersion: v1
metadata:
  name: php-service
spec:
  ports:
  - protocol: TCP
    port: 9000
    targetPort: 9000
  selector:
    app: php
  type: ClusterIP

#pha
---
kind: HorizontalPodAutoscaler
apiVersion: autoscaling/v1
metadata:
  name: php-pha
spec:
  minReplicas: 1
  maxReplicas: 3
  scaleTargetRef:
    kind: Deployment
    apiVersion: apps/v1
    name: php-deployment
  targetCPUUtilizationPercentage: 50

#nginx-deployment
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
      - name: pvc-for-nginx
        persistentVolumeClaim:
          claimName: pvc-nfs
      - name: conf-for-nginx
        configMap:
          name: nginx-conf
      containers:
      - name: nginx-container
        image: 192.168.1.100:5000/myos:nginx
        volumeMounts:
        - name: conf-for-nginx
          subPath: nginx.conf
          mountPath: /usr/local/nginx/conf/nginx.conf
        - name: pvc-for-nginx
          mountPath: /usr/local/nginx/html
        stdin: false
        tty: false
        ports:
        - containerPort: 80
          protocol: TCP
      restartPolicy: Always


#nginx-service
---
kind: Service
apiVersion: v1
metadata:
  name: nginx-service
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: nginx
  type: ClusterIP


#ingress
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: web
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
   backend:
    serviceName: nginx-service
    servicePort: 80
